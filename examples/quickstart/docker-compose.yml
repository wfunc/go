version: '3.8'
services:
  postgres:
    image: postgres:15-alpine
    container_name: quickstart-postgres
    environment:
      POSTGRES_USER: dev
      POSTGRES_PASSWORD: "123"
      POSTGRES_DB: base
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U dev -d base"]
      interval: 5s
      timeout: 3s
      retries: 10

  redis:
    image: redis:7-alpine
    container_name: quickstart-redis
    command: ["redis-server", "--appendonly", "no"]
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 10

  pgadmin:
    image: dpage/pgadmin4:8
    container_name: quickstart-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    depends_on:
      - postgres
    volumes:
      - pgadmin:/var/lib/pgadmin

  redisinsight:
    image: redis/redisinsight:latest
    container_name: quickstart-redisinsight
    ports:
      - "5540:5540"
    depends_on:
      - redis
    volumes:
      - redisinsight:/data

  botserver:
    build:
      context: ../..
      dockerfile: bot/botserver/Dockerfile
    container_name: quickstart-botserver
    environment:
      LISTEN_ADDR: ":8080"
      BOT_TOKEN: ${BOT_TOKEN:-}
      CHAT_ID: ${CHAT_ID:-}
      BOT_WEBHOOK_SECRET: ${BOT_WEBHOOK_SECRET:-}
    ports:
      - "8082:8080"
    depends_on:
      - redis
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://localhost:8080/health || exit 1"]
      interval: 10s
      timeout: 3s
      retries: 6
    volumes:
      - botdata:/home/app/data

volumes:
  pgdata:
    driver: local
  pgadmin:
    driver: local
  redisinsight:
    driver: local
  botdata:
    driver: local
